/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.mcd.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Event extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2490022431610346307L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Event\",\"namespace\":\"com.mcd.avro\",\"fields\":[{\"name\":\"RegId\",\"type\":\"string\"},{\"name\":\"Time\",\"type\":\"string\"},{\"name\":\"Type\",\"type\":\"string\"},{\"name\":\"storeId\",\"type\":\"string\"},{\"name\":\"Ev_Custom\",\"type\":{\"type\":\"record\",\"name\":\"EvCustom\",\"fields\":[{\"name\":\"Info\",\"type\":{\"type\":\"record\",\"name\":\"Info\",\"fields\":[{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}]}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Event> ENCODER =
      new BinaryMessageEncoder<Event>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Event> DECODER =
      new BinaryMessageDecoder<Event>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Event> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Event> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Event> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Event>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Event to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Event from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Event instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Event fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence RegId;
  private java.lang.CharSequence Time;
  private java.lang.CharSequence Type;
  private java.lang.CharSequence storeId;
  private com.mcd.avro.EvCustom Ev_Custom;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Event() {}

  /**
   * All-args constructor.
   * @param RegId The new value for RegId
   * @param Time The new value for Time
   * @param Type The new value for Type
   * @param storeId The new value for storeId
   * @param Ev_Custom The new value for Ev_Custom
   */
  public Event(java.lang.CharSequence RegId, java.lang.CharSequence Time, java.lang.CharSequence Type, java.lang.CharSequence storeId, com.mcd.avro.EvCustom Ev_Custom) {
    this.RegId = RegId;
    this.Time = Time;
    this.Type = Type;
    this.storeId = storeId;
    this.Ev_Custom = Ev_Custom;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return RegId;
    case 1: return Time;
    case 2: return Type;
    case 3: return storeId;
    case 4: return Ev_Custom;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: RegId = (java.lang.CharSequence)value$; break;
    case 1: Time = (java.lang.CharSequence)value$; break;
    case 2: Type = (java.lang.CharSequence)value$; break;
    case 3: storeId = (java.lang.CharSequence)value$; break;
    case 4: Ev_Custom = (com.mcd.avro.EvCustom)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'RegId' field.
   * @return The value of the 'RegId' field.
   */
  public java.lang.CharSequence getRegId() {
    return RegId;
  }


  /**
   * Sets the value of the 'RegId' field.
   * @param value the value to set.
   */
  public void setRegId(java.lang.CharSequence value) {
    this.RegId = value;
  }

  /**
   * Gets the value of the 'Time' field.
   * @return The value of the 'Time' field.
   */
  public java.lang.CharSequence getTime() {
    return Time;
  }


  /**
   * Sets the value of the 'Time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.CharSequence value) {
    this.Time = value;
  }

  /**
   * Gets the value of the 'Type' field.
   * @return The value of the 'Type' field.
   */
  public java.lang.CharSequence getType() {
    return Type;
  }


  /**
   * Sets the value of the 'Type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.Type = value;
  }

  /**
   * Gets the value of the 'storeId' field.
   * @return The value of the 'storeId' field.
   */
  public java.lang.CharSequence getStoreId() {
    return storeId;
  }


  /**
   * Sets the value of the 'storeId' field.
   * @param value the value to set.
   */
  public void setStoreId(java.lang.CharSequence value) {
    this.storeId = value;
  }

  /**
   * Gets the value of the 'Ev_Custom' field.
   * @return The value of the 'Ev_Custom' field.
   */
  public com.mcd.avro.EvCustom getEvCustom() {
    return Ev_Custom;
  }


  /**
   * Sets the value of the 'Ev_Custom' field.
   * @param value the value to set.
   */
  public void setEvCustom(com.mcd.avro.EvCustom value) {
    this.Ev_Custom = value;
  }

  /**
   * Creates a new Event RecordBuilder.
   * @return A new Event RecordBuilder
   */
  public static com.mcd.avro.Event.Builder newBuilder() {
    return new com.mcd.avro.Event.Builder();
  }

  /**
   * Creates a new Event RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Event RecordBuilder
   */
  public static com.mcd.avro.Event.Builder newBuilder(com.mcd.avro.Event.Builder other) {
    if (other == null) {
      return new com.mcd.avro.Event.Builder();
    } else {
      return new com.mcd.avro.Event.Builder(other);
    }
  }

  /**
   * Creates a new Event RecordBuilder by copying an existing Event instance.
   * @param other The existing instance to copy.
   * @return A new Event RecordBuilder
   */
  public static com.mcd.avro.Event.Builder newBuilder(com.mcd.avro.Event other) {
    if (other == null) {
      return new com.mcd.avro.Event.Builder();
    } else {
      return new com.mcd.avro.Event.Builder(other);
    }
  }

  /**
   * RecordBuilder for Event instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Event>
    implements org.apache.avro.data.RecordBuilder<Event> {

    private java.lang.CharSequence RegId;
    private java.lang.CharSequence Time;
    private java.lang.CharSequence Type;
    private java.lang.CharSequence storeId;
    private com.mcd.avro.EvCustom Ev_Custom;
    private com.mcd.avro.EvCustom.Builder Ev_CustomBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.mcd.avro.Event.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.RegId)) {
        this.RegId = data().deepCopy(fields()[0].schema(), other.RegId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.Time)) {
        this.Time = data().deepCopy(fields()[1].schema(), other.Time);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.Type)) {
        this.Type = data().deepCopy(fields()[2].schema(), other.Type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.storeId)) {
        this.storeId = data().deepCopy(fields()[3].schema(), other.storeId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.Ev_Custom)) {
        this.Ev_Custom = data().deepCopy(fields()[4].schema(), other.Ev_Custom);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasEvCustomBuilder()) {
        this.Ev_CustomBuilder = com.mcd.avro.EvCustom.newBuilder(other.getEvCustomBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Event instance
     * @param other The existing instance to copy.
     */
    private Builder(com.mcd.avro.Event other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.RegId)) {
        this.RegId = data().deepCopy(fields()[0].schema(), other.RegId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Time)) {
        this.Time = data().deepCopy(fields()[1].schema(), other.Time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Type)) {
        this.Type = data().deepCopy(fields()[2].schema(), other.Type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.storeId)) {
        this.storeId = data().deepCopy(fields()[3].schema(), other.storeId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Ev_Custom)) {
        this.Ev_Custom = data().deepCopy(fields()[4].schema(), other.Ev_Custom);
        fieldSetFlags()[4] = true;
      }
      this.Ev_CustomBuilder = null;
    }

    /**
      * Gets the value of the 'RegId' field.
      * @return The value.
      */
    public java.lang.CharSequence getRegId() {
      return RegId;
    }


    /**
      * Sets the value of the 'RegId' field.
      * @param value The value of 'RegId'.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder setRegId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.RegId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'RegId' field has been set.
      * @return True if the 'RegId' field has been set, false otherwise.
      */
    public boolean hasRegId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'RegId' field.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder clearRegId() {
      RegId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Time' field.
      * @return The value.
      */
    public java.lang.CharSequence getTime() {
      return Time;
    }


    /**
      * Sets the value of the 'Time' field.
      * @param value The value of 'Time'.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder setTime(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Time = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Time' field has been set.
      * @return True if the 'Time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Time' field.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder clearTime() {
      Time = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return Type;
    }


    /**
      * Sets the value of the 'Type' field.
      * @param value The value of 'Type'.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder setType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.Type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Type' field has been set.
      * @return True if the 'Type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Type' field.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder clearType() {
      Type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeId' field.
      * @return The value.
      */
    public java.lang.CharSequence getStoreId() {
      return storeId;
    }


    /**
      * Sets the value of the 'storeId' field.
      * @param value The value of 'storeId'.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder setStoreId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.storeId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'storeId' field has been set.
      * @return True if the 'storeId' field has been set, false otherwise.
      */
    public boolean hasStoreId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'storeId' field.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder clearStoreId() {
      storeId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Ev_Custom' field.
      * @return The value.
      */
    public com.mcd.avro.EvCustom getEvCustom() {
      return Ev_Custom;
    }


    /**
      * Sets the value of the 'Ev_Custom' field.
      * @param value The value of 'Ev_Custom'.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder setEvCustom(com.mcd.avro.EvCustom value) {
      validate(fields()[4], value);
      this.Ev_CustomBuilder = null;
      this.Ev_Custom = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'Ev_Custom' field has been set.
      * @return True if the 'Ev_Custom' field has been set, false otherwise.
      */
    public boolean hasEvCustom() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'Ev_Custom' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.mcd.avro.EvCustom.Builder getEvCustomBuilder() {
      if (Ev_CustomBuilder == null) {
        if (hasEvCustom()) {
          setEvCustomBuilder(com.mcd.avro.EvCustom.newBuilder(Ev_Custom));
        } else {
          setEvCustomBuilder(com.mcd.avro.EvCustom.newBuilder());
        }
      }
      return Ev_CustomBuilder;
    }

    /**
     * Sets the Builder instance for the 'Ev_Custom' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.mcd.avro.Event.Builder setEvCustomBuilder(com.mcd.avro.EvCustom.Builder value) {
      clearEvCustom();
      Ev_CustomBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Ev_Custom' field has an active Builder instance
     * @return True if the 'Ev_Custom' field has an active Builder instance
     */
    public boolean hasEvCustomBuilder() {
      return Ev_CustomBuilder != null;
    }

    /**
      * Clears the value of the 'Ev_Custom' field.
      * @return This builder.
      */
    public com.mcd.avro.Event.Builder clearEvCustom() {
      Ev_Custom = null;
      Ev_CustomBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Event build() {
      try {
        Event record = new Event();
        record.RegId = fieldSetFlags()[0] ? this.RegId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Time = fieldSetFlags()[1] ? this.Time : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.Type = fieldSetFlags()[2] ? this.Type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.storeId = fieldSetFlags()[3] ? this.storeId : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (Ev_CustomBuilder != null) {
          try {
            record.Ev_Custom = this.Ev_CustomBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("Ev_Custom"));
            throw e;
          }
        } else {
          record.Ev_Custom = fieldSetFlags()[4] ? this.Ev_Custom : (com.mcd.avro.EvCustom) defaultValue(fields()[4]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Event>
    WRITER$ = (org.apache.avro.io.DatumWriter<Event>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Event>
    READER$ = (org.apache.avro.io.DatumReader<Event>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.RegId);

    out.writeString(this.Time);

    out.writeString(this.Type);

    out.writeString(this.storeId);

    this.Ev_Custom.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.RegId = in.readString(this.RegId instanceof Utf8 ? (Utf8)this.RegId : null);

      this.Time = in.readString(this.Time instanceof Utf8 ? (Utf8)this.Time : null);

      this.Type = in.readString(this.Type instanceof Utf8 ? (Utf8)this.Type : null);

      this.storeId = in.readString(this.storeId instanceof Utf8 ? (Utf8)this.storeId : null);

      if (this.Ev_Custom == null) {
        this.Ev_Custom = new com.mcd.avro.EvCustom();
      }
      this.Ev_Custom.customDecode(in);

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.RegId = in.readString(this.RegId instanceof Utf8 ? (Utf8)this.RegId : null);
          break;

        case 1:
          this.Time = in.readString(this.Time instanceof Utf8 ? (Utf8)this.Time : null);
          break;

        case 2:
          this.Type = in.readString(this.Type instanceof Utf8 ? (Utf8)this.Type : null);
          break;

        case 3:
          this.storeId = in.readString(this.storeId instanceof Utf8 ? (Utf8)this.storeId : null);
          break;

        case 4:
          if (this.Ev_Custom == null) {
            this.Ev_Custom = new com.mcd.avro.EvCustom();
          }
          this.Ev_Custom.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










